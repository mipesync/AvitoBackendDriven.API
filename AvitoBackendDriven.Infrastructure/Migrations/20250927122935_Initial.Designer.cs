// <auto-generated />
using System;
using AvitoBackendDriven.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AvitoBackendDriven.Infrastructure.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20250927122935_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.ChangeHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangeData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ChangeType")
                        .HasColumnType("integer");

                    b.Property<int>("ComponentId")
                        .HasColumnType("integer");

                    b.Property<int>("ScreenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ScreenId");

                    b.ToTable("UiChangeHistories", (string)null);
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DefaultProperties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("Kind")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Platform")
                        .HasColumnType("integer");

                    b.Property<int?>("ScreenId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("Version")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ScreenId");

                    b.ToTable("Components", (string)null);
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Composition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComponentId")
                        .HasColumnType("integer");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("integer");

                    b.Property<int?>("ParentCompositionId")
                        .HasColumnType("integer");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<int>("ScreenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ScreenId");

                    b.ToTable("Compositions", (string)null);
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Experiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Buckets")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double?>("MaxVersion")
                        .HasColumnType("double precision");

                    b.Property<double?>("MinVersion")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.PrimitiveCollection<int[]>("Platforms")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("TrafficPercentage")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Experiments", (string)null);
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Screen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<double?>("MinVersion")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Platform")
                        .HasColumnType("integer");

                    b.Property<string>("Properties")
                        .HasColumnType("jsonb");

                    b.Property<string>("States")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Screens", (string)null);
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.ChangeHistory", b =>
                {
                    b.HasOne("AvitoBackendDriven.Domain.Entities.Component", "Component")
                        .WithMany("ChangeHistories")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvitoBackendDriven.Domain.Entities.Screen", "Screen")
                        .WithMany("ChangeHistories")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Component");

                    b.Navigation("Screen");
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Component", b =>
                {
                    b.HasOne("AvitoBackendDriven.Domain.Entities.Screen", null)
                        .WithMany("Components")
                        .HasForeignKey("ScreenId");
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Composition", b =>
                {
                    b.HasOne("AvitoBackendDriven.Domain.Entities.Component", null)
                        .WithMany("ScreenComponents")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvitoBackendDriven.Domain.Entities.Screen", null)
                        .WithMany("ScreenComponents")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Component", b =>
                {
                    b.Navigation("ChangeHistories");

                    b.Navigation("ScreenComponents");
                });

            modelBuilder.Entity("AvitoBackendDriven.Domain.Entities.Screen", b =>
                {
                    b.Navigation("ChangeHistories");

                    b.Navigation("Components");

                    b.Navigation("ScreenComponents");
                });
#pragma warning restore 612, 618
        }
    }
}
